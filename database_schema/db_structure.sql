--
-- PostgreSQL database dump
--

-- Dumped from database version 17rc1
-- Dumped by pg_dump version 17rc1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: fuzzystrmatch; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS fuzzystrmatch WITH SCHEMA public;


--
-- Name: EXTENSION fuzzystrmatch; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION fuzzystrmatch IS 'determine similarities and distance between strings';


--
-- Name: maturity_type; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.maturity_type AS ENUM (
    'developing',
    'testing',
    'production'
);


ALTER TYPE public.maturity_type OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: analytics; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.analytics (
    id integer NOT NULL,
    name character varying(100),
    code text,
    opt_out_code text
);


ALTER TABLE public.analytics OWNER TO postgres;

--
-- Name: analytics_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.analytics_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.analytics_id_seq OWNER TO postgres;

--
-- Name: analytics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.analytics_id_seq OWNED BY public.analytics.id;


--
-- Name: auth_assignment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_assignment (
    item_name character varying(64) NOT NULL,
    user_id integer NOT NULL,
    created_at integer
);


ALTER TABLE public.auth_assignment OWNER TO postgres;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_item; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_item (
    name character varying(64) NOT NULL,
    type integer NOT NULL,
    description text,
    rule_name character varying(64),
    data text,
    created_at integer,
    updated_at integer,
    group_code character varying(64)
);


ALTER TABLE public.auth_item OWNER TO postgres;

--
-- Name: auth_item_child; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_item_child (
    parent character varying(64) NOT NULL,
    child character varying(64) NOT NULL
);


ALTER TABLE public.auth_item_child OWNER TO postgres;

--
-- Name: auth_item_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_item_group (
    code character varying(64) NOT NULL,
    name character varying(255) NOT NULL,
    created_at integer,
    updated_at integer
);


ALTER TABLE public.auth_item_group OWNER TO postgres;

--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_rule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_rule (
    name character varying(64) NOT NULL,
    data text,
    created_at integer,
    updated_at integer
);


ALTER TABLE public.auth_rule OWNER TO postgres;

--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cold_storage_autoaccept; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cold_storage_autoaccept (
    storage double precision,
    user_type character varying(15),
    id integer NOT NULL,
    autoaccept_number integer
);


ALTER TABLE public.cold_storage_autoaccept OWNER TO postgres;

--
-- Name: cold_storage_autoaccept_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cold_storage_autoaccept_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.cold_storage_autoaccept_id_seq OWNER TO postgres;

--
-- Name: cold_storage_autoaccept_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cold_storage_autoaccept_id_seq OWNED BY public.cold_storage_autoaccept.id;


--
-- Name: cold_storage_limits; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cold_storage_limits (
    storage bigint,
    user_type character varying(15),
    duration integer,
    id integer NOT NULL,
    number_of_projects integer
);


ALTER TABLE public.cold_storage_limits OWNER TO postgres;

--
-- Name: cold_storage_limits_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cold_storage_limits_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.cold_storage_limits_id_seq OWNER TO postgres;

--
-- Name: cold_storage_limits_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cold_storage_limits_id_seq OWNED BY public.cold_storage_limits.id;


--
-- Name: cold_storage_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cold_storage_request (
    id bigint NOT NULL,
    request_id bigint,
    storage double precision,
    description text,
    additional_resources text,
    type text,
    vm_type integer,
    num_of_volumes integer DEFAULT 1
);


ALTER TABLE public.cold_storage_request OWNER TO postgres;

--
-- Name: cold_storage_request_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cold_storage_request_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.cold_storage_request_id_seq OWNER TO postgres;

--
-- Name: cold_storage_request_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cold_storage_request_id_seq OWNED BY public.cold_storage_request.id;


--
-- Name: configuration; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.configuration (
    reviewer_num integer,
    home_page integer,
    privacy_page integer,
    help_page integer,
    schema_url text
);


ALTER TABLE public.configuration OWNER TO postgres;

--
-- Name: cron_job; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cron_job (
    id_cron_job integer NOT NULL,
    controller character varying(255) NOT NULL,
    action character varying(255) NOT NULL,
    "limit" integer,
    "offset" integer,
    running smallint NOT NULL,
    success smallint NOT NULL,
    started_at integer,
    ended_at integer,
    last_execution_time double precision
);


ALTER TABLE public.cron_job OWNER TO postgres;

--
-- Name: cron_job_id_cron_job_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cron_job_id_cron_job_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.cron_job_id_cron_job_seq OWNER TO postgres;

--
-- Name: cron_job_id_cron_job_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cron_job_id_cron_job_seq OWNED BY public.cron_job.id_cron_job;


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: email; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email (
    id integer NOT NULL,
    recipient_ids integer[],
    type text,
    sent_at timestamp without time zone,
    message text,
    project_id integer
);


ALTER TABLE public.email OWNER TO postgres;

--
-- Name: email_events; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_events (
    id integer NOT NULL,
    user_id integer,
    user_creation boolean,
    new_project boolean,
    project_decision boolean,
    new_ticket boolean,
    expires_30 boolean,
    expires_15 boolean,
    edit_project boolean DEFAULT false,
    expires_1 boolean,
    expires_5 boolean
);


ALTER TABLE public.email_events OWNER TO postgres;

--
-- Name: email_events_admin; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_events_admin (
    id integer NOT NULL,
    user_id integer,
    user_creation boolean,
    new_ticket boolean,
    expires_1 boolean,
    expires_5 boolean
);


ALTER TABLE public.email_events_admin OWNER TO postgres;

--
-- Name: email_events_admin_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.email_events_admin_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.email_events_admin_id_seq OWNER TO postgres;

--
-- Name: email_events_admin_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.email_events_admin_id_seq OWNED BY public.email_events_admin.id;


--
-- Name: email_events_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.email_events_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.email_events_id_seq OWNER TO postgres;

--
-- Name: email_events_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.email_events_id_seq OWNED BY public.email_events.id;


--
-- Name: email_events_moderator; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_events_moderator (
    id integer NOT NULL,
    user_id integer,
    new_project boolean,
    expires_30 boolean,
    expires_15 boolean,
    expires_1 boolean,
    expires_5 boolean,
    project_decision boolean,
    edit_project boolean
);


ALTER TABLE public.email_events_moderator OWNER TO postgres;

--
-- Name: email_events_moderator_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.email_events_moderator_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.email_events_moderator_id_seq OWNER TO postgres;

--
-- Name: email_events_moderator_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.email_events_moderator_id_seq OWNED BY public.email_events_moderator.id;


--
-- Name: email_events_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_events_user (
    id integer NOT NULL,
    user_id integer,
    project_decision boolean,
    expires_1 boolean,
    expires_5 boolean,
    expires_30 boolean,
    expires_15 boolean
);


ALTER TABLE public.email_events_user OWNER TO postgres;

--
-- Name: email_events_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.email_events_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.email_events_user_id_seq OWNER TO postgres;

--
-- Name: email_events_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.email_events_user_id_seq OWNED BY public.email_events_user.id;


--
-- Name: email_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.email_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.email_id_seq OWNER TO postgres;

--
-- Name: email_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.email_id_seq OWNED BY public.email.id;


--
-- Name: email_verification_id_seq_1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.email_verification_id_seq_1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.email_verification_id_seq_1 OWNER TO postgres;

--
-- Name: email_verification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_verification (
    id integer DEFAULT nextval('public.email_verification_id_seq_1'::regclass) NOT NULL,
    verification_token character varying(100) NOT NULL,
    user_id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    email character varying(128) NOT NULL,
    expiry timestamp without time zone NOT NULL,
    status smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.email_verification OWNER TO postgres;

--
-- Name: hot_volumes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.hot_volumes (
    id integer NOT NULL,
    name text,
    project_id bigint,
    volume_id text,
    mountpoint text,
    accepted_at timestamp without time zone,
    vm_type integer,
    active boolean,
    deleted_at timestamp without time zone,
    deleted_by text,
    vm_id bigint,
    created_at timestamp without time zone,
    mult_order integer DEFAULT 1
);


ALTER TABLE public.hot_volumes OWNER TO postgres;

--
-- Name: hot_volumes_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.hot_volumes_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.hot_volumes_id_seq OWNER TO postgres;

--
-- Name: hot_volumes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.hot_volumes_id_seq OWNED BY public.hot_volumes.id;


--
-- Name: jupyter_autoaccept; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jupyter_autoaccept (
    num_of_jobs integer,
    cores integer,
    ram double precision,
    user_type character varying(15),
    id integer NOT NULL,
    autoaccept_number integer
);


ALTER TABLE public.jupyter_autoaccept OWNER TO postgres;

--
-- Name: jupyter_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.jupyter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.jupyter_id_seq OWNER TO postgres;

--
-- Name: jupyter_images_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.jupyter_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.jupyter_images_id_seq OWNER TO postgres;

--
-- Name: jupyter_images; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jupyter_images (
    id bigint DEFAULT nextval('public.jupyter_images_id_seq'::regclass) NOT NULL,
    description text,
    image text,
    gpu boolean DEFAULT false
);


ALTER TABLE public.jupyter_images OWNER TO postgres;

--
-- Name: jupyter_limits; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jupyter_limits (
    num_of_jobs integer,
    cores integer,
    ram double precision,
    user_type character varying(15),
    duration integer,
    id integer NOT NULL,
    number_of_projects integer,
    participants integer
);


ALTER TABLE public.jupyter_limits OWNER TO postgres;

--
-- Name: jupyter_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jupyter_request (
    id bigint DEFAULT nextval('public.jupyter_id_seq'::regclass) NOT NULL,
    request_id bigint,
    description text,
    maturity public.maturity_type,
    analysis_type character varying(200),
    containerized boolean,
    num_of_jobs integer,
    ram double precision,
    cores integer,
    additional_resources text
);


ALTER TABLE public.jupyter_request OWNER TO postgres;

--
-- Name: jupyter_request_n; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jupyter_request_n (
    id bigint DEFAULT nextval('public.jupyter_id_seq'::regclass) NOT NULL,
    request_id bigint,
    description text,
    containerized boolean,
    ram double precision,
    cores integer,
    additional_resources text,
    image text,
    image_id bigint,
    participant_view text,
    participants_number integer
);


ALTER TABLE public.jupyter_request_n OWNER TO postgres;

--
-- Name: jupyter_server_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.jupyter_server_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.jupyter_server_id_seq OWNER TO postgres;

--
-- Name: jupyter_server; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jupyter_server (
    id bigint DEFAULT nextval('public.jupyter_server_id_seq'::regclass) NOT NULL,
    manifest character varying(100),
    image text,
    project character varying(100),
    server_id character varying(20),
    created_at timestamp without time zone,
    deleted_at timestamp without time zone,
    created_by text,
    deleted_by text,
    project_end_date timestamp without time zone,
    url text,
    active boolean,
    expires_on timestamp without time zone,
    state character varying(20),
    image_id bigint
);


ALTER TABLE public.jupyter_server OWNER TO postgres;

--
-- Name: machine_compute_limits; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.machine_compute_limits (
    id integer NOT NULL,
    user_type character varying(15),
    number_of_projects integer
);


ALTER TABLE public.machine_compute_limits OWNER TO postgres;

--
-- Name: machine_compute_limits_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.machine_compute_limits_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.machine_compute_limits_id_seq OWNER TO postgres;

--
-- Name: machine_compute_limits_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.machine_compute_limits_id_seq OWNED BY public.machine_compute_limits.id;


--
-- Name: machine_compute_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.machine_compute_request (
    id bigint NOT NULL,
    description text,
    num_of_vms smallint DEFAULT 1,
    num_of_cores smallint,
    num_of_ips smallint,
    ram double precision,
    storage double precision,
    request_id bigint,
    vm_flavour text,
    disk integer,
    additional_resources text
);


ALTER TABLE public.machine_compute_request OWNER TO postgres;

--
-- Name: machine_compute_request_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.machine_compute_request_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.machine_compute_request_id_seq OWNER TO postgres;

--
-- Name: machine_compute_request_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.machine_compute_request_id_seq OWNED BY public.machine_compute_request.id;


--
-- Name: migration; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.migration (
    version character varying(180) NOT NULL,
    apply_time integer
);


ALTER TABLE public.migration OWNER TO postgres;

--
-- Name: notification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notification (
    id integer NOT NULL,
    recipient_id integer NOT NULL,
    message text,
    seen boolean DEFAULT false,
    type integer,
    created_at timestamp without time zone,
    read_at timestamp without time zone,
    url text
);


ALTER TABLE public.notification OWNER TO postgres;

--
-- Name: notification_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.notification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.notification_id_seq OWNER TO postgres;

--
-- Name: notification_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.notification_id_seq OWNED BY public.notification.id;


--
-- Name: notification_recipient_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.notification_recipient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.notification_recipient_id_seq OWNER TO postgres;

--
-- Name: notification_recipient_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.notification_recipient_id_seq OWNED BY public.notification.recipient_id;


--
-- Name: ondemand_autoaccept; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ondemand_autoaccept (
    num_of_jobs integer,
    cores integer,
    ram double precision,
    user_type character varying(15),
    id integer NOT NULL,
    autoaccept_number integer
);


ALTER TABLE public.ondemand_autoaccept OWNER TO postgres;

--
-- Name: ondemand_autoaccept_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ondemand_autoaccept_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ondemand_autoaccept_id_seq OWNER TO postgres;

--
-- Name: ondemand_autoaccept_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ondemand_autoaccept_id_seq OWNED BY public.ondemand_autoaccept.id;


--
-- Name: ondemand_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ondemand_request (
    id bigint NOT NULL,
    request_id bigint,
    description text,
    maturity public.maturity_type,
    analysis_type character varying(200),
    containerized boolean,
    num_of_jobs integer,
    ram double precision,
    cores integer,
    additional_resources text
);


ALTER TABLE public.ondemand_request OWNER TO postgres;

--
-- Name: ondemand_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ondemand_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ondemand_id_seq OWNER TO postgres;

--
-- Name: ondemand_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ondemand_id_seq OWNED BY public.ondemand_request.id;


--
-- Name: ondemand_limits; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ondemand_limits (
    num_of_jobs integer,
    cores integer,
    ram double precision,
    user_type character varying(15),
    duration integer,
    id integer NOT NULL,
    number_of_projects integer
);


ALTER TABLE public.ondemand_limits OWNER TO postgres;

--
-- Name: ondemand_limits_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ondemand_limits_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ondemand_limits_id_seq OWNER TO postgres;

--
-- Name: ondemand_limits_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ondemand_limits_id_seq OWNED BY public.ondemand_limits.id;


--
-- Name: openstack; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.openstack (
    nova_url text,
    keystone_url text,
    cinder_url text,
    neutron_url text,
    glance_url text,
    tenant_id text,
    floating_net_id text,
    cred_id text,
    cred_secret text,
    id integer NOT NULL,
    internal_net_id text
);


ALTER TABLE public.openstack OWNER TO postgres;

--
-- Name: openstack_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.openstack_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.openstack_id_seq OWNER TO postgres;

--
-- Name: openstack_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.openstack_id_seq OWNED BY public.openstack.id;


--
-- Name: openstack_machines; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.openstack_machines (
    nova_url text,
    keystone_url text,
    cinder_url text,
    neutron_url text,
    glance_url text,
    tenant_id text,
    floating_net_id text,
    cred_id text,
    cred_secret text,
    id integer NOT NULL,
    internal_net_id text
);


ALTER TABLE public.openstack_machines OWNER TO postgres;

--
-- Name: pages; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pages (
    id integer NOT NULL,
    title text,
    content text
);


ALTER TABLE public.pages OWNER TO postgres;

--
-- Name: pages_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.pages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.pages_id_seq OWNER TO postgres;

--
-- Name: pages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.pages_id_seq OWNED BY public.pages.id;


--
-- Name: project; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.project (
    id bigint NOT NULL,
    name character varying(200),
    status smallint DEFAULT 0,
    latest_project_request_id bigint,
    pending_request_id bigint,
    project_type smallint,
    favorite boolean DEFAULT false,
    start_date timestamp without time zone
);


ALTER TABLE public.project OWNER TO postgres;

--
-- Name: project_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.project_request (
    id bigint NOT NULL,
    name character varying(200),
    duration integer,
    user_num integer,
    user_list integer[],
    backup_services boolean,
    viewed boolean DEFAULT false,
    status smallint DEFAULT 0,
    submitted_by integer,
    submission_date timestamp without time zone,
    assigned_to bigint,
    project_type smallint,
    project_id bigint,
    approval_date timestamp without time zone,
    approved_by integer,
    deletion_date timestamp without time zone,
    end_date date,
    additional_resources text,
    louros boolean DEFAULT false
);


ALTER TABLE public.project_request OWNER TO postgres;

--
-- Name: project_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.project_id_seq OWNER TO postgres;

--
-- Name: project_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.project_id_seq OWNED BY public.project_request.id;


--
-- Name: project_id_seq1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.project_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.project_id_seq1 OWNER TO postgres;

--
-- Name: project_id_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.project_id_seq1 OWNED BY public.project.id;


--
-- Name: service_autoaccept; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service_autoaccept (
    vms integer,
    cores integer,
    ips integer,
    ram double precision,
    storage double precision,
    user_type character varying(15),
    id integer NOT NULL,
    autoaccept_number integer
);


ALTER TABLE public.service_autoaccept OWNER TO postgres;

--
-- Name: service_autoaccept_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.service_autoaccept_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.service_autoaccept_id_seq OWNER TO postgres;

--
-- Name: service_autoaccept_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.service_autoaccept_id_seq OWNED BY public.service_autoaccept.id;


--
-- Name: service_limits; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service_limits (
    vms integer,
    cores integer,
    ips integer,
    ram double precision,
    storage double precision,
    user_type character varying(15),
    duration integer,
    id integer NOT NULL,
    number_of_projects integer
);


ALTER TABLE public.service_limits OWNER TO postgres;

--
-- Name: service_limits_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.service_limits_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.service_limits_id_seq OWNER TO postgres;

--
-- Name: service_limits_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.service_limits_id_seq OWNED BY public.service_limits.id;


--
-- Name: service_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.service_request (
    id bigint NOT NULL,
    name character varying(200),
    version character varying(50),
    description text,
    url text,
    num_of_vms smallint,
    num_of_cores smallint,
    num_of_ips smallint,
    ram double precision,
    storage double precision,
    request_id bigint NOT NULL,
    trl smallint,
    vm_flavour text,
    disk integer,
    additional_resources text
);


ALTER TABLE public.service_request OWNER TO postgres;

--
-- Name: services_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.services_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.services_id_seq OWNER TO postgres;

--
-- Name: services_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.services_id_seq OWNED BY public.service_request.id;


--
-- Name: services_project_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.services_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.services_project_id_seq OWNER TO postgres;

--
-- Name: services_project_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.services_project_id_seq OWNED BY public.service_request.request_id;


--
-- Name: smtp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.smtp (
    id integer NOT NULL,
    encryption text,
    host text,
    username text,
    port text,
    password text
);


ALTER TABLE public.smtp OWNER TO postgres;

--
-- Name: smtp_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.smtp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.smtp_id_seq OWNER TO postgres;

--
-- Name: smtp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.smtp_id_seq OWNED BY public.smtp.id;


--
-- Name: ticket_body; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ticket_body (
    id integer NOT NULL,
    id_head integer NOT NULL,
    name_user character varying(255),
    text text,
    client integer DEFAULT 0,
    date timestamp(0) without time zone
);


ALTER TABLE public.ticket_body OWNER TO postgres;

--
-- Name: ticket_body_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ticket_body_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ticket_body_id_seq OWNER TO postgres;

--
-- Name: ticket_body_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ticket_body_id_seq OWNED BY public.ticket_body.id;


--
-- Name: ticket_file; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ticket_file (
    id integer NOT NULL,
    id_body integer NOT NULL,
    "fileName" character varying(255) NOT NULL,
    document_name character varying(255)
);


ALTER TABLE public.ticket_file OWNER TO postgres;

--
-- Name: ticket_file_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ticket_file_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ticket_file_id_seq OWNER TO postgres;

--
-- Name: ticket_file_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ticket_file_id_seq OWNED BY public.ticket_file.id;


--
-- Name: ticket_head; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ticket_head (
    id integer NOT NULL,
    user_id integer NOT NULL,
    department character varying(255),
    topic character varying(255),
    status integer DEFAULT 0,
    date_update timestamp(0) without time zone DEFAULT NULL::timestamp without time zone,
    page text
);


ALTER TABLE public.ticket_head OWNER TO postgres;

--
-- Name: ticket_head_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ticket_head_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ticket_head_id_seq OWNER TO postgres;

--
-- Name: ticket_head_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ticket_head_id_seq OWNED BY public.ticket_head.id;


--
-- Name: user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."user" (
    id integer NOT NULL,
    username character varying(255) NOT NULL,
    auth_key character varying(32) NOT NULL,
    password_hash character varying(255) NOT NULL,
    confirmation_token character varying(255),
    status integer DEFAULT 1 NOT NULL,
    superadmin smallint DEFAULT 0,
    created_at integer NOT NULL,
    updated_at integer NOT NULL,
    registration_ip character varying(15),
    bind_to_ip character varying(255),
    email character varying(128),
    email_confirmed smallint DEFAULT 0 NOT NULL,
    name character varying(100),
    surname character varying(100)
);


ALTER TABLE public."user" OWNER TO postgres;

--
-- Name: user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.user_id_seq OWNER TO postgres;

--
-- Name: user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.user_id_seq OWNED BY public."user".id;


--
-- Name: user_visit_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_visit_log (
    id integer NOT NULL,
    token character varying(255) NOT NULL,
    ip character varying(15) NOT NULL,
    language character(2) NOT NULL,
    user_agent character varying(255) NOT NULL,
    user_id integer,
    visit_time integer NOT NULL,
    browser character varying(30),
    os character varying(20)
);


ALTER TABLE public.user_visit_log OWNER TO postgres;

--
-- Name: user_visit_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.user_visit_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.user_visit_log_id_seq OWNER TO postgres;

--
-- Name: user_visit_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.user_visit_log_id_seq OWNED BY public.user_visit_log.id;


--
-- Name: vm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.vm (
    id bigint NOT NULL,
    ip_address character varying(100),
    ip_id text,
    vm_id text,
    public_key text,
    image_id text,
    image_name character varying(100),
    request_id integer NOT NULL,
    active boolean,
    keypair_name character varying(255),
    created_by integer,
    deleted_by integer,
    volume_id text,
    created_at timestamp without time zone,
    deleted_at timestamp without time zone,
    do_not_delete_disk boolean DEFAULT false,
    windows_unique_id text,
    read_win_password boolean DEFAULT false,
    project_id bigint,
    name character varying(200)
);


ALTER TABLE public.vm OWNER TO postgres;

--
-- Name: vm_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.vm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.vm_id_seq OWNER TO postgres;

--
-- Name: vm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.vm_id_seq OWNED BY public.vm.id;


--
-- Name: vm_machines; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.vm_machines (
    id bigint NOT NULL,
    ip_address character varying(100),
    ip_id text,
    vm_id text,
    public_key text,
    image_id text,
    image_name character varying(100),
    request_id integer,
    active boolean,
    keypair_name character varying(255),
    created_by integer,
    deleted_by integer,
    volume_id text,
    created_at timestamp without time zone,
    deleted_at timestamp without time zone,
    do_not_delete_disk boolean,
    windows_unique_id text,
    read_win_password boolean,
    project_id bigint,
    project_multiple_order integer DEFAULT 1,
    name character varying(200)
);


ALTER TABLE public.vm_machines OWNER TO postgres;

--
-- Name: vm_machines_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.vm_machines_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.vm_machines_id_seq OWNER TO postgres;

--
-- Name: vm_machines_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.vm_machines_id_seq OWNED BY public.vm_machines.id;


--
-- Name: analytics id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.analytics ALTER COLUMN id SET DEFAULT nextval('public.analytics_id_seq'::regclass);


--
-- Name: cold_storage_autoaccept id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cold_storage_autoaccept ALTER COLUMN id SET DEFAULT nextval('public.cold_storage_autoaccept_id_seq'::regclass);


--
-- Name: cold_storage_limits id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cold_storage_limits ALTER COLUMN id SET DEFAULT nextval('public.cold_storage_limits_id_seq'::regclass);


--
-- Name: cold_storage_request id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cold_storage_request ALTER COLUMN id SET DEFAULT nextval('public.cold_storage_request_id_seq'::regclass);


--
-- Name: cron_job id_cron_job; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cron_job ALTER COLUMN id_cron_job SET DEFAULT nextval('public.cron_job_id_cron_job_seq'::regclass);


--
-- Name: email id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email ALTER COLUMN id SET DEFAULT nextval('public.email_id_seq'::regclass);


--
-- Name: email_events id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_events ALTER COLUMN id SET DEFAULT nextval('public.email_events_id_seq'::regclass);


--
-- Name: email_events_admin id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_events_admin ALTER COLUMN id SET DEFAULT nextval('public.email_events_admin_id_seq'::regclass);


--
-- Name: email_events_moderator id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_events_moderator ALTER COLUMN id SET DEFAULT nextval('public.email_events_moderator_id_seq'::regclass);


--
-- Name: email_events_user id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_events_user ALTER COLUMN id SET DEFAULT nextval('public.email_events_user_id_seq'::regclass);


--
-- Name: hot_volumes id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hot_volumes ALTER COLUMN id SET DEFAULT nextval('public.hot_volumes_id_seq'::regclass);


--
-- Name: machine_compute_limits id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.machine_compute_limits ALTER COLUMN id SET DEFAULT nextval('public.machine_compute_limits_id_seq'::regclass);


--
-- Name: machine_compute_request id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.machine_compute_request ALTER COLUMN id SET DEFAULT nextval('public.machine_compute_request_id_seq'::regclass);


--
-- Name: notification id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification ALTER COLUMN id SET DEFAULT nextval('public.notification_id_seq'::regclass);


--
-- Name: notification recipient_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification ALTER COLUMN recipient_id SET DEFAULT nextval('public.notification_recipient_id_seq'::regclass);


--
-- Name: ondemand_autoaccept id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ondemand_autoaccept ALTER COLUMN id SET DEFAULT nextval('public.ondemand_autoaccept_id_seq'::regclass);


--
-- Name: ondemand_limits id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ondemand_limits ALTER COLUMN id SET DEFAULT nextval('public.ondemand_limits_id_seq'::regclass);


--
-- Name: ondemand_request id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ondemand_request ALTER COLUMN id SET DEFAULT nextval('public.ondemand_id_seq'::regclass);


--
-- Name: openstack id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.openstack ALTER COLUMN id SET DEFAULT nextval('public.openstack_id_seq'::regclass);


--
-- Name: pages id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pages ALTER COLUMN id SET DEFAULT nextval('public.pages_id_seq'::regclass);


--
-- Name: project id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project ALTER COLUMN id SET DEFAULT nextval('public.project_id_seq1'::regclass);


--
-- Name: project_request id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_request ALTER COLUMN id SET DEFAULT nextval('public.project_id_seq'::regclass);


--
-- Name: service_autoaccept id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_autoaccept ALTER COLUMN id SET DEFAULT nextval('public.service_autoaccept_id_seq'::regclass);


--
-- Name: service_limits id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_limits ALTER COLUMN id SET DEFAULT nextval('public.service_limits_id_seq'::regclass);


--
-- Name: service_request id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_request ALTER COLUMN id SET DEFAULT nextval('public.services_id_seq'::regclass);


--
-- Name: service_request request_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.service_request ALTER COLUMN request_id SET DEFAULT nextval('public.services_project_id_seq'::regclass);


--
-- Name: smtp id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.smtp ALTER COLUMN id SET DEFAULT nextval('public.smtp_id_seq'::regclass);


--
-- Name: ticket_body id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket_body ALTER COLUMN id SET DEFAULT nextval('public.ticket_body_id_seq'::regclass);


--
-- Name: ticket_file id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket_file ALTER COLUMN id SET DEFAULT nextval('public.ticket_file_id_seq'::regclass);


--
-- Name: ticket_head id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket_head ALTER COLUMN id SET DEFAULT nextval('public.ticket_head_id_seq'::regclass);


--
-- Name: user id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user" ALTER COLUMN id SET DEFAULT nextval('public.user_id_seq'::regclass);


--
-- Name: user_visit_log id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_visit_log ALTER COLUMN id SET DEFAULT nextval('public.user_visit_log_id_seq'::regclass);


--
-- Name: vm id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.vm ALTER COLUMN id SET DEFAULT nextval('public.vm_id_seq'::regclass);


--
-- Name: vm_machines id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.vm_machines ALTER COLUMN id SET DEFAULT nextval('public.vm_machines_id_seq'::regclass);


--
-- Data for Name: analytics; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.analytics (id, name, code, opt_out_code) FROM stdin;
\.


--
-- Data for Name: auth_assignment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_assignment (item_name, user_id, created_at) FROM stdin;
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_item; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_item (name, type, description, rule_name, data, created_at, updated_at, group_code) FROM stdin;
commonPermission	2	Common permission	\N	\N	1557228782	1557228782	\N
